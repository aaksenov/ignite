<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean name="baseCacheConfig" class="org.apache.ignite.configuration.CacheConfiguration" abstract="true">
        <property name="name" value="default"/>
        <property name="atomicityMode" value="ATOMIC"/>
        <property name="backups" value="1"/>
    </bean>

    <bean name="baseReplicatedCacheConfig" parent="baseCacheConfig" abstract="true">
        <property name="cacheMode" value="REPLICATED"/>
    </bean>

    <bean name="aws.creds" class="com.amazonaws.auth.BasicAWSCredentials">
        <constructor-arg value="#{systemEnvironment['AWS_ACCESS_KEY']}"/>
        <constructor-arg value="#{systemEnvironment['AWS_SECRET_KEY']}"/>
    </bean>



    <bean id="ignite.cfg" class="org.apache.ignite.configuration.IgniteConfiguration">

        <property name="peerClassLoadingEnabled" value="false"/>

        <property name="metricsLogFrequency" value="0"/>

        <!--
             configure the maximum number of allowed outgoing messages for client nodes
             If the size of outbound queue exceeds this value, such a client node will
             be disconnected from the cluster preventing global slowdown.
        -->
        <property name="communicationSpi">
            <bean class="org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi">
                <property name="slowClientQueueLimit" value="1023"/>

                <property name="messageQueueLimit" value="1024"/>

                <!--  default is 2000  -->
                <property name="socketWriteTimeout" value="45000"/>

                <!--  default is 5000 -->
                <property name="connectTimeout" value="45000"/>

                <!-- default is 30000 -->
                <property name="idleConnectionTimeout" value="45000"/>
            </bean>
        </property>

        <!--  default is 5000 -->
        <property name="networkTimeout" value="45000"/>

        <!--  default is 3 -->
        <property name="networkSendRetryCount" value="5"/>



        <property name="cacheConfiguration">
            <list>
                <!-- Partitioned cache example configuration (Atomic mode). -->

                <bean name="lockCacheConfig" parent="baseReplicatedCacheConfig">
                    <property name="name" value="lock"/>
                    <property name="atomicityMode" value="TRANSACTIONAL"/>
                </bean>

                <bean name="attributeCacheConfig" parent="baseCacheConfig">
                    <property name="name" value="attribute"/>
                    <property name="backups" value="7"/>
                </bean>

                <bean name="expirableCacheConfig" parent="baseCacheConfig">
                    <property name="backups" value="7"/>
                    <property name="name" value="expirableCache"/>
                    <property name="eagerTtl" value="true"/>
                    <property name="expiryPolicyFactory">
                        <bean class="javax.cache.expiry.AccessedExpiryPolicy" factory-method="factoryOf">
                            <constructor-arg>
                                <bean class="javax.cache.expiry.Duration">
                                    <constructor-arg value="MINUTES"/>
                                    <constructor-arg value="60"/>
                                </bean>
                            </constructor-arg>
                        </bean>
                    </property>
                </bean>


            </list>
        </property>


        <!-- Explicitly configure TCP discovery SPI to provide list of initial nodes. -->
        <property name="discoverySpi">
            <bean name="tcpDiscoverySpi" class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.elb.TcpDiscoveryElbIpFinder">
                        <property name="credentialsProvider">
                            <bean class="com.amazonaws.auth.AWSStaticCredentialsProvider">
                                <constructor-arg ref="aws.creds"/>
                            </bean>
                        </property>
                        <property name="region" value="us-east-1"/>
                        <property name="loadBalancerName" value="aaksenovcluster2"/>
                    </bean>




                    <!--<bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.s3.TcpDiscoveryS3IpFinder">-->
                    <!--<property name="awsCredentials" ref="aws.creds"/>-->
                    <!--<property name="clientConfiguration">-->
                    <!--<bean class="com.amazonaws.ClientConfiguration"/>-->
                    <!--</property>-->
                    <!--<property name="bucketName">-->
                    <!--<value>aaksenovtestcluster1</value>-->
                    <!--</property>-->
                    <!--</bean>-->
                </property>
            </bean>
        </property>
    </bean>
</beans>
